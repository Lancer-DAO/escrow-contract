//test_cases.yaml
approve Request tests:
  test approveRequest:
    instruction:
      createFeatureFundingAccount: pass
      fundFeature: pass
      addApprovedSubmitters: pass
      approveRequest:
        No Request Submitted yet: fail
      submitRequest: pass
      approveRequest: pass

  test creator = submitter works perfectly when calling approveRequest:
    instruction:
      createFeatureFundingAccount: pass
      fundFeature: pass
      addApprovedSubmitters:
        creator = submitter: pass
      approveRequest:
        No Request Submitted yet: fail
      submitRequest: pass
      approveRequest: pass

  test referral fees:
    instruction:
      createFeatureFundingAccount: pass
      fundFeature: pass
      addApproveSubmitter: pass
      submitRequest: pass
      approveRequestThirdParty: pass

  approve ReQuest for Multiple Submitters:
    instruction:
      createFeatureFundingAccount: pass
      fundFeature: pass
      addApprovedSubmitters(1): pass
      addApprovedSubmitters(2): pass
      addApprovedSubmitters(3): pass
      addApprovedSubmitters(4): pass
      addApprovedSubmitters(5): pass
      submitRequestMultiple:
        "This Instruction is used for only Multiple submitters.": fail
      enableMultipleSubmitters: pass
      submitRequestMultiple(1): pass
      submitRequestMultiple(2): pass
      submitRequestMultiple(3): pass
      submitRequestMultiple(4): pass
      submitRequestMultiple(5): pass
      approveRequestMultiple:
        "Share must be 100": fail
      setShareMultipleSubmitters(1):
        share = 50: pass
      setShareMultipleSubmitters(2):
        share = 25: pass
      setShareMultipleSubmitters(3):
        share = 15: pass
      setShareMultipleSubmitters(4):
        share = 5: pass
      setShareMultipleSubmitters(5):
        share = 5: pass
      approveRequestMultiple: pass

  test no lancer fees when admin creates bounty and calls approveRequest(Multiple Submitters):
    instruction:
      createFeatureFundingAccount:
        admin = creator: pass
      fundFeature: pass
      addApprovedSubmitters(1): pass
      addApprovedSubmitters(2): pass
      addApprovedSubmitters(3): pass
      addApprovedSubmitters(4): pass
      addApprovedSubmitters(5): pass
      submitRequestMultiple:
        "This Instruction is used for only Multiple submitters.": fail
      enableMultipleSubmitters: pass
      submitRequestMultiple(1): pass
      submitRequestMultiple(2): pass
      submitRequestMultiple(3): pass
      submitRequestMultiple(4): pass
      submitRequestMultiple(5): pass
      approveRequestMultiple:
        "Share must be 100": fail
      setShareMultipleSubmitters(1):
        share = 50: pass
      setShareMultipleSubmitters(2):
        share = 25: pass
      setShareMultipleSubmitters(3):
        share = 15: pass
      setShareMultipleSubmitters(4):
        share = 5: pass
      setShareMultipleSubmitters(5):
        share = 5: pass
      approveRequestMultiple: pass

  test third party does not collect fees when admin creates bounty and calls approveRequestThirdParty:
    instruction:
      createFeatureFundingAccount:
        admin = creator: pass
      fundFeature: pass
      addApprovedSubmitters: pass
      submitRequestInstruction: pass
      approveRequestThirdParty: pass

  test no lancer fees when admin creates bounty and calls approveRequest(Single Submitter):
    instruction:
      createFeatureFundingAccount:
        admin = creator: pass
      fundFeature: pass
      addApprovedSubmitters: pass
      approveRequest:
        "No Request Submitted yet": fail
      submitRequest: pass
      approveRequest: pass

  test referral does not collect fees when admin creates bounty and calls approveRequestWithReferral:
    instruction:
      createFeatureFundingAccount:
        admin = creator: pass
      fundFeature: pass
      addApprovedSubmitters(1): pass
      addApprovedSubmitters(2): pass
      addApprovedSubmitters(3): pass
      addApprovedSubmitters(4): pass
      addApprovedSubmitters(5): pass
      submitRequestMultiple:
        "This Instruction is used for only Multiple submitters.": fail
      enableMultipleSubmitters: pass
      submitRequestMultiple(1): pass
      submitRequestMultiple(2): pass
      submitRequestMultiple(3): pass
      submitRequestMultiple(4): pass
      submitRequestMultiple(5): pass
      approveRequestMultiple:
        "Share must be 100": fail
      setShareMultipleSubmitters(1):
        share = 50: pass
      setShareMultipleSubmitters(2):
        share = 25: pass
      setShareMultipleSubmitters(3):
        share = 15: pass
      setShareMultipleSubmitters(4):
        share = 5: pass
      setShareMultipleSubmitters(5):
        share = 5: pass
      approveRequestMultipleWithReferral: pass

approve partial tests:
  test createLancerTokenAccount works:
    instruction:
      createLancerTokenAccount:
        admin != creator: fail
        admin = creator: pass

  test partial payment works:
    instruction:
      createFeatureFundingAccount: pass
      fundFeature: pass
      addApprovedSubmitters: pass
      approveRequest:
        No Request Submitted yet: fail
      submitRequest: pass
      approveRequestPartial: 
        Cannot withdraw full funds.: fail
      approveRequestPartial: pass

  test partial payment works when admin creates bounty i.e no fees (single submitter):
    instruction:
      createFeatureFundingAccount: 
        admin = creator: pass
      fundFeature: pass
      addApprovedSubmitters: pass
      approveRequest: 
        No Request Submitted yet: fail
      submitRequest: pass
      approveRequestPartial: 
        Cannot withdraw full funds.: fail
      approveRequestPartial: pass


approve submitter tests:
  test approveSubmitter:
    instruction:
      createFeatureFundingAccount: pass
      addApprovedSubmitters(1): pass
      addApprovedSubmitters(2): pass
      addApprovedSubmitters(3): pass
      addApprovedSubmitters(4): pass
      addApprovedSubmitters(5): pass
      addApprovedSubmitters(6):
        "Max Number of Approved Submitters already reached": fail

  removed approved submitters:
    instruction:
      createFeatureFundingAccount: pass
      removeApprovedSubmitters:
        "Min Number of Approved Submitters already reached": fail
      addApprovedSubmitters(1): pass
      addApprovedSubmitters(2): pass
      addApprovedSubmitters(3): pass
      removeApprovedSubmitters:
        submitter1: pass
      addApprovedSubmitters(1): pass
      removeApprovedSubmitters:
        submitter3: pass
      addApprovedSubmitters(3): pass
      removeApprovedSubmitters:
        submitter3: pass

  prevent adding the same submitter Pubkey in the list twice:
    createFeatureFundingAccount: pass
    addApprovedSubmitters(1): pass
    addApprovedSubmitters(2): pass
    addApprovedSubmitters(1):
      Submitter Key Already Present in ApprovedSubmitters List: fail
    
cancel feature tests:
  test voteToCancel:
    instruction:
      createFeatureFundingAccount: pass
      addApprovedSubmitters: pass
      submitRequest: pass
      voteToCancel:
        creator = true: pass
      voteToCancel:
        submitter = true: pass
      
  test cancelFeature:
    instruction:
      createFeatureFundingAccount: pass
      addApprovedSubmitters: pass
      submitRequest: pass
      fundFeature: pass
      cancelFeature:
        funder_cancel = false & payout_cancel = false:
          "Cannot Cancel Feature": fail 
      denyRequest: pass
      cancelFeature:
        funder_cancel = false & request_submitted = true:
          "Cannot Cancel Feature": fail
      voteToCancel:
        creator = true: pass
      voteToCancel:
        submitter = false: pass
      voteToCancel:
        creator = false: pass
      cancelFeature:
        funder_cancel = false & payout_cancel = false:
          "Cannot Cancel Feature": fail
      voteToCancel:
        creator = true: pass
      voteToCancel:
        submitter = true: pass
      cancelFeature: pass
      
  cancel vote if creator = submitter:
    instruction:
      createFeatureFundingAccount: pass
      addApprovedSubmitters:
        submitter = creator: pass
      submitRequest: pass
      voteToCancel: pass

deny Request tests:
  test denyRequest:
    instruction:
      createFeatureFundingAccount: pass
      fundFeature: pass
      addApprovedSubmitters: pass
      denyRequest:
        "No Request Submitted yet": fail
      submitRequest: pass
      denyRequest: pass

fund feature tests:
  test fundFeature Works:
    instruction:
      createFeatureFundingAccount: pass
      fundFeature:
        (token account amount < amount + lancer fee):
          "Insufficient funds to pay lancer fee": fail
      fundFeature:
        (token account amount >= amount + lancer fee): pass

  if admin = creator, creator does not pay extra 5% upfront:
    instruction:
      createFeatureFundingAccount: pass
      fundFeature:
        (token account amount < amount):
          "Insufficient funds to pay lancer fee": fail
      fundFeature:
        (token account amount >= amount): pass

  test amount gets added on if fundFeature is called twice:
    instruction:
      createFeatureFundingAccount: pass
      fundFeature:
        (token account amount < amount + lancer fee):
          "Insufficient funds to pay lancer fee": fail
      fundFeature:
        (token account amount >= amount + lancer fee): pass
      fundFeature:
        (token account amount >= amount + lancer fee): pass

  (admin = creator)test amount gets added but still no lancer fee if fundFeature is called twice:
    instruction:
      createFeatureFundingAccount: pass
      fundFeature:
        (token account amount < amount):
          "Insufficient funds to pay lancer fee": fail
      fundFeature:
        (token account amount >= amount): pass
      fundFeature:
        (token account amount >= amount): pass

integration tests:
  test createFFAInstruction works:
    instruction:
      createFeatureFundingAccount: pass
  
  test toggle on enable multiple submitters:
    instruction:
      createFeatureFundingAccount: pass
      enableMultipleSubmitters: pass

  set shares of multiple submitters:
    instruction:
      createFeatureFundingAccount: pass
      enableMultipleSubmitters: pass
      addApprovedSubmitters(1): pass
      addApprovedSubmitters(2): pass
      addApprovedSubmitters(3): pass
      addApprovedSubmitters(4): pass
      addApprovedSubmitters(5): pass
      addApprovedSubmitters(6):
        "Max Number of Approved Submitters already reached": fail
      setShareMultipleSubmitters:
        submitter1_share = 101:
          "Share Cannot Exceed 100": fail
      setShareMultipleSubmitters:
        creator = unauthorized:
          "A seeds constraint was violated": fail
      setShareMultipleSubmitters(1):
        share = 20: pass
      setShareMultipleSubmitters(2):
        share = 20: pass
      setShareMultipleSubmitters(3):
        share = 20: pass
      setShareMultipleSubmitters(4):
        share = 20: pass
      setShareMultipleSubmitters(5):
        share = 20: pass
      setShareMultipleSubmitters(6):
        submitter = unauthorized:
          "You do not have permissions to submit": fail

  withdraw tokens after depositing:
    instruction:
      createFeatureFundingAccount: pass
      fundFeature: pass
      addApprovedSubmitters: pass
      submitRequest: pass
      approveRequest: pass
      withdrawTokens:
        admin = unauthorized:
          "You are not the Admin": fail
      withdrawTokens: pass

submit Request tests:
  test submitRequest:
    instruction:
      createFeatureFundingAccount: pass
      addApprovedSubmitters: pass
      submitRequest: pass
      submitRequest:
        "There is an active request already present": fail
      
  test submitRequest fails when enable multiple submitters is turmed on:
    instruction:
      createFeatureFundingAccount: pass
      addApprovedSubmitters: pass
      enableMultipleSubmitters: pass
      submitRequest:
        "This Instruction is used for only a single submitter.": fail

  unapproved submitter cannot submit request:
    instruction:
      createFeatureFundingAccount: pass
      submitRequest:
        "You do not have permissions to submit": fail

  test submit Request Multiple parties:
    instruction:
      createFeatureFundingAccount: pass
      addApprovedSubmitters(1): pass
      addApprovedSubmitters(2): pass
      submitRequestMultiple:
        "This Instruction is used for only Multiple submitters.": fail
      enableMultipleSubmitters: pass
      submitRequestMultiple(1): pass
      submitRequestMultiple(2): pass

  test submit Request Multiple can be called by creator:
    instruction:
      createFeatureFundingAccount: pass
      addApprovedSubmitters(1): pass
      addApprovedSubmitters(2): pass
      submitRequestMultiple:
        "This Instruction is used for only Multiple submitters.": fail
      enableMultipleSubmitters: pass
      submitRequestMultiple(1): pass
      submitRequestMultiple(2): pass
      submitRequestMultiple(creator): pass
